buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-compiler:$kotlinVersion"
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version "$kotlinVersion"
    id 'maven-publish'
}

group 'ru.spbstu'
version "$kotlinVersion"

repositories {
    jcenter()
}

task gen() {
    doLast {
        def warnings =
                Class.forName("org.jetbrains.kotlin.diagnostics.Errors")
                .declaredFields
                .collect { [it.name, it.get(null)] }
                .findAll { it[1] in Class.forName("org.jetbrains.kotlin.diagnostics.DiagnosticFactory") }
                .findAll { it[1]?.severity?.toString() == 'WARNING' }
                .collect { it[0] }
                .collect { """const val $it = "$it" """ }
                .join('\n')
        mkdir 'src/main/kotlin/kotlinx'

        new File("src/main/kotlin/kotlinx/Warnings.kt").withPrintWriter {
            it.println("package kotlinx.warnings")
            it.println()
            it.println("object Warnings { ")
            it.println('    ' + warnings.replace('\n', '\n    '))
            it.println("}")
        }
    }
}

kotlin {
    jvm()
    js {
        nodejs()
        browser()
    }
}

clean {
    afterEvaluate {
        file('src/main/kotlin/kotlinx').deleteDir()
    }
}

assemble {
    dependsOn gen
}

publishing {
    repositories {
        maven {
            url = "https://api.bintray.com/maven/${bintrayOrg}/${bintrayRepo}/${project.name}/;publish=1;override=1"
            credentials {
                username (project.property('bintrayUsername') ?: System.getenv('BINTRAY_USERNAME'))
                password (project.property('bintrayPassword') ?: System.getenv('BINTRAY_PASSWORD'))
            }
        }
    }
}
